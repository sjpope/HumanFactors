{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sampo\\\\OneDrive\\\\Documents\\\\TXST\\\\Human Factors\\\\Repos\\\\HumanFactors\\\\client\\\\src\\\\pages\\\\ResultsPage.jsx\",\n  _s = $RefreshSig$();\n// ResultsPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Header from '../components/header';\nimport SideBar from '../components/sideBar';\nimport RestaurantList from '../components/RestaurantList';\nimport './ResultsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsPage() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filters, setFilters] = useState({\n    price: '',\n    health: false,\n    glutenFree: false,\n    nutAllergySafe: false\n  });\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (searchQuery) params.set('q', searchQuery);\n    if (filters.price) params.set('price', filters.price);\n    if (filters.health) params.set('health', '1'); // Assuming \"1\" is the indicator for healthy foods\n\n    // Additional allergy filters\n    if (filters.glutenFree) params.set('allergy', 'gluten-free');\n    if (filters.nutAllergySafe) params.set('allergy', 'nut-allergy-safe');\n    fetch(`http://127.0.0.1:8000/api/search/?${params.toString()}`).then(response => response.json()).then(data => setSearchResults(data)).catch(error => console.error('Error fetching data:', error));\n  }, [searchQuery, filters]);\n  const applyFilters = (price, health, glutenFree, nutAllergySafe) => {\n    setFilters({\n      price,\n      health,\n      glutenFree,\n      nutAllergySafe\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery,\n      applyFilters: applyFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-list-container\",\n      children: /*#__PURE__*/_jsxDEV(RestaurantList, {\n        restaurants: searchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(ResultsPage, \"FLEEh6yrpm0BZqAxORQajtZsJXk=\");\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Header","SideBar","RestaurantList","jsxDEV","_jsxDEV","ResultsPage","_s","searchResults","setSearchResults","searchQuery","setSearchQuery","filters","setFilters","price","health","glutenFree","nutAllergySafe","params","URLSearchParams","set","fetch","toString","then","response","json","data","catch","error","console","applyFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","className","restaurants","_c","$RefreshReg$"],"sources":["C:/Users/sampo/OneDrive/Documents/TXST/Human Factors/Repos/HumanFactors/client/src/pages/ResultsPage.jsx"],"sourcesContent":["// ResultsPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Header from '../components/header';\r\nimport SideBar from '../components/sideBar';\r\nimport RestaurantList from '../components/RestaurantList';\r\nimport './ResultsPage.css';\r\n\r\nfunction ResultsPage() {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [filters, setFilters] = useState({ price: '', health: false, glutenFree: false, nutAllergySafe: false });\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams();\r\n        if (searchQuery) params.set('q', searchQuery);\r\n        if (filters.price) params.set('price', filters.price);\r\n        if (filters.health) params.set('health', '1'); // Assuming \"1\" is the indicator for healthy foods\r\n\r\n        // Additional allergy filters\r\n        if (filters.glutenFree) params.set('allergy', 'gluten-free');\r\n        if (filters.nutAllergySafe) params.set('allergy', 'nut-allergy-safe');\r\n\r\n        fetch(`http://127.0.0.1:8000/api/search/?${params.toString()}`)\r\n            .then(response => response.json())\r\n            .then(data => setSearchResults(data))\r\n            .catch(error => console.error('Error fetching data:', error));\r\n    }, [searchQuery, filters]);\r\n\r\n    const applyFilters = (price, health, glutenFree, nutAllergySafe) => {\r\n        setFilters({ price, health, glutenFree, nutAllergySafe });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <SideBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} applyFilters={applyFilters} />\r\n            <div className=\"results-list-container\">\r\n                <RestaurantList restaurants={searchResults} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}