{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sampo\\\\OneDrive\\\\Documents\\\\TXST\\\\Human Factors\\\\Repos\\\\HumanFactors\\\\client\\\\src\\\\pages\\\\ResultsPage.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ResultsPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Header from '../components/header';\nimport SideBar from '../components/sideBar';\nimport RestaurantList from '../components/RestaurantList';\nimport './ResultsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nfunction ResultsPage() {\n  _s2();\n  const queryParams = useQuery();\n  const initialSearchQuery = queryParams.get('q') || '';\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(initialSearchQuery);\n  const [filters, setFilters] = useState({\n    price: '',\n    health: false,\n    glutenFree: false,\n    nutAllergySafe: false\n  });\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (searchQuery) params.set('q', searchQuery);\n    if (filters.price) params.set('price', filters.price);\n    if (filters.health) params.set('health', '1'); // Example health filter\n    if (filters.glutenFree) params.set('allergy', 'gluten-free');\n    if (filters.nutAllergySafe) params.set('allergy', 'nut-allergy-safe');\n    fetch(`http://127.0.0.1:8000/api/search/?${params.toString()}`).then(response => response.json()).then(data => setSearchResults(data)).catch(error => console.error('Error fetching data:', error));\n  }, [searchQuery, filters]);\n  const applyFilters = (price, health, glutenFree, nutAllergySafe) => {\n    setFilters({\n      price,\n      health,\n      glutenFree,\n      nutAllergySafe\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery,\n      applyFilters: applyFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-list-container\",\n      children: /*#__PURE__*/_jsxDEV(RestaurantList, {\n        restaurants: searchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n}\n_s2(ResultsPage, \"LXEr+6+Tc3pCy0tO8Uq+w/I5PHc=\", false, function () {\n  return [useQuery];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Header","SideBar","RestaurantList","jsxDEV","_jsxDEV","useQuery","_s","URLSearchParams","search","ResultsPage","_s2","queryParams","initialSearchQuery","get","searchResults","setSearchResults","searchQuery","setSearchQuery","filters","setFilters","price","health","glutenFree","nutAllergySafe","params","set","fetch","toString","then","response","json","data","catch","error","console","applyFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","className","restaurants","_c","$RefreshReg$"],"sources":["C:/Users/sampo/OneDrive/Documents/TXST/Human Factors/Repos/HumanFactors/client/src/pages/ResultsPage.jsx"],"sourcesContent":["// ResultsPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Header from '../components/header';\r\nimport SideBar from '../components/sideBar';\r\nimport RestaurantList from '../components/RestaurantList';\r\nimport './ResultsPage.css';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nfunction ResultsPage() {\r\n  const queryParams = useQuery();\r\n  const initialSearchQuery = queryParams.get('q') || '';\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(initialSearchQuery);\r\n  const [filters, setFilters] = useState({ price: '', health: false, glutenFree: false, nutAllergySafe: false });\r\n\r\n  useEffect(() => {\r\n      const params = new URLSearchParams();\r\n      if (searchQuery) params.set('q', searchQuery);\r\n      if (filters.price) params.set('price', filters.price);\r\n      if (filters.health) params.set('health', '1'); // Example health filter\r\n      if (filters.glutenFree) params.set('allergy', 'gluten-free');\r\n      if (filters.nutAllergySafe) params.set('allergy', 'nut-allergy-safe');\r\n\r\n      fetch(`http://127.0.0.1:8000/api/search/?${params.toString()}`)\r\n          .then((response) => response.json())\r\n          .then((data) => setSearchResults(data))\r\n          .catch((error) => console.error('Error fetching data:', error));\r\n  }, [searchQuery, filters]);\r\n\r\n  const applyFilters = (price, health, glutenFree, nutAllergySafe) => {\r\n      setFilters({ price, health, glutenFree, nutAllergySafe });\r\n  };\r\n\r\n  return (\r\n      <div>\r\n          <Header />\r\n          <SideBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} applyFilters={applyFilters} />\r\n          <div className=\"results-list-container\">\r\n              <RestaurantList restaurants={searchResults} />\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ResultsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}